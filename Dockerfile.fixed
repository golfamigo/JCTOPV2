# Fixed Dockerfile for JCTOP Zeabur deployment
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files for dependency resolution
COPY package*.json ./
COPY turbo.json ./
COPY apps/server/package*.json ./apps/server/
COPY packages/shared-types/package*.json ./packages/shared-types/
COPY packages/config/package*.json ./packages/config/

# Install all dependencies first
RUN npm ci

# Copy all source code
COPY . .

# Build shared-types first if it exists
WORKDIR /app/packages/shared-types
RUN npm run build || echo "No build script found, continuing..."

# Build config package if it exists  
WORKDIR /app/packages/config
RUN npm run build || echo "No build script found, continuing..."

# Build the server
WORKDIR /app/apps/server
RUN npm run build

# Production stage
FROM node:18-alpine AS runner

WORKDIR /app

# Install production dependencies
COPY package*.json ./
COPY apps/server/package*.json ./apps/server/
RUN npm ci --only=production --omit=dev

# Copy built application
COPY --from=builder /app/apps/server/dist ./apps/server/dist
COPY --from=builder /app/packages ./packages
COPY --from=builder /app/apps/server/data-source.ts ./apps/server/
COPY --from=builder /app/apps/server/src/migrations ./apps/server/src/migrations

WORKDIR /app/apps/server

# Create non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nodejs
RUN chown -R nodejs:nodejs /app

USER nodejs

EXPOSE 3000

ENV NODE_ENV=production
ENV PORT=3000

# Simple health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1

# Start directly with node
CMD ["node", "dist/main.js"]