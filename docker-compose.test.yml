version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: jctop
      POSTGRES_USER: jctop
      POSTGRES_PASSWORD: testpassword
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jctop"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: apps/server/Dockerfile.zeabur
    ports:
      - "3001:3000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://jctop:testpassword@postgres:5432/jctop?sslmode=disable
      JWT_SECRET: test-jwt-secret-key-change-in-production
      ENCRYPTION_SECRET_KEY: "test-encryption-key-32-charsssss"
      CORS_ORIGIN: http://localhost:3000
      TYPEORM_SYNCHRONIZE: "true"
      GOOGLE_CLIENT_ID: "test-google-client-id"
      GOOGLE_CLIENT_SECRET: "test-google-client-secret"
      GOOGLE_CALLBACK_URL: "http://localhost:3001/api/v1/auth/google/callback"
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "cd /app/apps/server && node dist/main"

  frontend:
    build:
      context: .
      dockerfile: apps/client/Dockerfile.zeabur
    ports:
      - "3000:3000"
    environment:
      EXPO_PUBLIC_API_URL: http://localhost:3001/api/v1
      NODE_ENV: development
    depends_on:
      - backend

volumes:
  postgres_data: